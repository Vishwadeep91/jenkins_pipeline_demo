pipeline {
  agent {
    docker {
      image 'vishwadeep91/maven-vishwa-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    GIT_REPO_NAME = "jenkins_pipeline_demo"
    GIT_USER_NAME = "Vishwadeep91"
  }

  stages {

    stage('Clean Workspace') {
      steps {
        deleteDir() // Cleans the workspace before fresh clone
      }
    }

    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build and Test') {
      steps {
        sh 'cd spring-boot-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://172.27.170.114:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "vishwadeep91/java-app-cicd:${BUILD_NUMBER}"
      }
      steps {
        script {
          sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            echo "[INFO] Inside workspace: $(pwd)"
            echo "[INFO] Listing files:"
            ls -a

            git config user.email "vishwadeeppola@gmail.com"
            git config user.name "Vishwadeep91"

            echo "[INFO] Updating deployment.yaml with build number ${BUILD_NUMBER}"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yaml

            echo "[INFO] Git Status:"
            git status

            git add spring-boot-app-manifests/deployment.yaml || true
            git diff --cached --quiet || git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
          '''
        }
      }
    }
  }
}
